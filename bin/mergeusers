#!/usr/bin/perl -w
use strict;
use Act::Config;
use Act::User;
use Act::Talk;
use Act::Order;
use DBI;

# init the database handle
$Request{dbh} = DBI->connect(
    $Config->database_dsn, $Config->database_user,
    $Config->database_passwd, { AutoCommit => 0 }
  )
  or die "can't connect to database: " . $DBI::errstr;

END {
    $Request{dbh}->commit;
    $Request{dbh}->disconnect;
}

exit unless @ARGV > 1;

my @users = map { Act::User->new( user_id => $_ ) } @ARGV;

print "Merging the following users:\n";
{
    no warnings;
    printf "- %3d %s %s (%s) <%s>\n", $_->user_id, $_->first_name,
      $_->last_name, $_->nick_name, $_->email
      for @users;
}
print "into the user $users[-1]{user_id}\n";

my $main = pop @users;

### alternative 1
for my $table (qw(talks orders participations rights)) {
    my $sth = $Request{dbh}->prepare('UPDATE $table SET user_id = ? WHERE user_id = ?');
    $sth->execute($main->user_id, $_->user_id) for @users;
}

### alternative 2
my ( @talks, @orders, @participations, @rights );

# récupère les infos
for my $u (@users) {
    push @talks, @{ $u->talks };
    push @orders, @{ Act::Order->get_items( user_id => $u->user_id ) };
}

# associe les talks et les orders au user $main
# $_->update( user_id => $main->user_id ) for @talks, @orders;

# associe les participations et les rights au user $main

# supprime les bios
for my $u (@users) {
}

# FIXME et les photos ?

# supprime les users devenus inutiles
# $_->delete for @users;

