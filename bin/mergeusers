#!/usr/bin/perl -w
use strict;
use Act::Config;
use Act::User;
use Act::Talk;
use Act::Order;
use DBI;
use Getopt::Long;

# command line parameters
my %conf = (
    quiet     => 0,
    'dry-run' => 0,
);
GetOptions( \%conf, 'quiet!', 'dry-run|n!' )
    or die my $usage = << 'USAGE';
Usage:
mergeusers [-q] [-n] <uid> ... <uid> <main>
  -quiet      : be quiet
  -dry-run    : just show what you would do (implies -noquiet)
USAGE

$conf{verbose} = 1 if $conf{'dry-run'};

# init the database handle
$Request{dbh} = DBI->connect(
    $Config->database_dsn, $Config->database_user,
    $Config->database_passwd, { AutoCommit => 0 }
) or die "Can't connect to database: " . $DBI::errstr;

print STDERR "Not enough parameters: @ARGV\n", $usage if @ARGV < 2;

# load the users
my @users = map { Act::User->new( user_id => $_ ) } @ARGV;

if ( grep { !defined } @users ) {
    for (@ARGV) {
        print STDERR "User $_ doesn't exist in the database\n"
            if !defined Act::User->new( user_id => $_ );
    }
    exit;
}

my $main = pop @users;

message("Merging the following users:\n");
message( "-", userinfo($_) ) for @users;
message("into the user", userinfo($main) );

for my $u (@users) {
    message( "\nProcessing user", userinfo($u) );

    # reassign the talks
    message( "* talks\n" );
    for my $t (@{ $u->talks }) {
        message( "  - ", talkinfo( $t ) );
        # FIXME
    }

    # reassign the orders
    message( "* orders\n" );
    for my $o (@{ Act::Order->get_items( user_id => $u->user_id )} ) {
        message( "  - ", orderinfo( $o ) );
        # FIXME
    }

    # reassign the participations
    message( "* participations\n" );
    for my $conf_id (map { $_->{conf_id} } @{ $u->participations }) {
        message( "  - $conf_id\n" );
        # FIXME
        
        # transfer the rights
        local $Request{conference} = $conf_id;
        message( "    rights: " );
        for my $r (keys %{ $u->rights }) {
            message( "$r ");
        }
        message("\n");
        # FIXME
    }

    message( "* bios\n" );
    # FIXME
    message( "* photos\n" );
    # FIXME

    # delete the user
    # FIXME
    message( "Removed user", userinfo( $u ) );
}

# commit everything
$Request{dbh}->commit;
$Request{dbh}->disconnect;

# useful subs
sub message { print "@_" if ! $conf{quiet}; }

sub userinfo {
    my $u = shift;
    no warnings;
    return sprintf "%4d %s %s (%s) <%s>\n", $u->user_id, $u->first_name,
        $u->last_name, $u->nick_name, $u->email;
}

sub talkinfo {
    my $t = shift;
    no warnings;
    return sprintf "%4d [%-10s] %s\n", $t->talk_id, $t->conf_id, $t->title;
}

sub orderinfo {
    my $o = shift;
    no warnings;
    return sprintf "%4d [%-10s] %3d %s %s (%s)\n", $o->order_id, $o->conf_id,
        $o->amount, $o->currency, $o->means, $o->status;
}

